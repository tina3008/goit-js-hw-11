{"version":3,"file":"commonHelpers.js","sources":["../src/main.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\n// +++++++++++++++++++\n\nconst inputfield = document.querySelector('input');\nconst inputBtn = document.querySelector('button');\nconst fillForm = document.querySelector('form');\nconst setGallery = document.querySelector('ul.gallery');\nlet wishImgs;\n\n// Begin ++++++++++++++++\n\ninputBtn.addEventListener('click', event => {\n  event.preventDefault();\n  wishImgs = inputfield.value.trim();\n\n  // control coreect fill input\n\n  if (!wishImgs.length) {\n    iziToast.error({\n      color: 'red',\n      position: 'topRight',\n      message: `❌ Please fill in the field for search query.`,\n    });\n  }\n\n  // ++++++++++ URL\n\n  const searchParams = new URLSearchParams({\n    key: '22926721-5d20aa08498ffd1ff2f906542',\n    // key: '42609290-856768105ab9e79485c69bf61',\n    q: wishImgs,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: 'true',\n  });\n\n  const url = `https://pixabay.com/api/?${searchParams}`;\n\n  // fetch===================\n\n  function fetchImg() {\n    return fetch(url).then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    });\n  }\n\n  // +++++++++++++ imge gallery\n\n  function renderImgs(images) {\n    console.log(images);\n\n    const imgGallery = images\n      .map(\n        image => `<a href=\"${image.largeImageURL}\">     \n    <img src=\"${image.webformatURL}\" \n    alt=\"${image.tags}\">\n   \n    <ul class=\"image-descript\">\n  <li>\n    <h3>likes</h3>\n    <p>${image.likes}</p>\n  </li>\n  <li>\n    <h3>views</h3>\n    <p>${image.views}</p>\n  </li>\n  <li>\n    <h3>comments</h3>\n    <p>${image.comments}</p>\n  </li>\n  <li>\n    <h3>downloads</h3>\n    <p>${image.downloads}</p>\n  </li>\n    </ul>\n  </a>`\n      )\n      .join('');\n\n    setGallery.insertAdjacentHTML('beforeend', imgGallery);\n\n    const lightbox = new SimpleLightbox('.gallery a', {\n      captionsData: 'alt',\n    });\n\n    lightbox.refresh();\n  }\n\n  // request\n\n  fetchImg()\n    .then(images => {\n      renderImgs(images);\n    })\n    .catch(error => {\n      iziToast.error({\n        color: 'red',\n        position: 'topRight',\n        message: `❌ Sorry, there are no images matching your search query. Please try again!`,\n      });\n    });\n});\n"],"names":["inputfield","inputBtn","setGallery","wishImgs","event","iziToast","url","fetchImg","response","renderImgs","images","imgGallery","image","SimpleLightbox","error"],"mappings":"6vBAQA,MAAMA,EAAa,SAAS,cAAc,OAAO,EAC3CC,EAAW,SAAS,cAAc,QAAQ,EAC/B,SAAS,cAAc,MAAM,EAC9C,MAAMC,EAAa,SAAS,cAAc,YAAY,EACtD,IAAIC,EAIJF,EAAS,iBAAiB,QAASG,GAAS,CAC1CA,EAAM,eAAc,EACpBD,EAAWH,EAAW,MAAM,OAIvBG,EAAS,QACZE,EAAS,MAAM,CACb,MAAO,MACP,SAAU,WACV,QAAS,8CACf,CAAK,EAcH,MAAMC,EAAM,4BATS,IAAI,gBAAgB,CACvC,IAAK,qCAEL,EAAGH,EACH,WAAY,QACZ,YAAa,aACb,WAAY,MAChB,CAAG,CAEmD,GAIpD,SAASI,GAAW,CAClB,OAAO,MAAMD,CAAG,EAAE,KAAKE,GAAY,CACjC,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MAAMA,EAAS,MAAM,EAEjC,OAAOA,EAAS,MACtB,CAAK,CACF,CAID,SAASC,EAAWC,EAAQ,CAC1B,QAAQ,IAAIA,CAAM,EAElB,MAAMC,EAAaD,EAChB,IACCE,GAAS,YAAYA,EAAM,aAAa;AAAA,gBAChCA,EAAM,YAAY;AAAA,WACvBA,EAAM,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,SAKZA,EAAM,KAAK;AAAA;AAAA;AAAA;AAAA,SAIXA,EAAM,KAAK;AAAA;AAAA;AAAA;AAAA,SAIXA,EAAM,QAAQ;AAAA;AAAA;AAAA;AAAA,SAIdA,EAAM,SAAS;AAAA;AAAA;AAAA,OAIjB,EACA,KAAK,EAAE,EAEVV,EAAW,mBAAmB,YAAaS,CAAU,EAEpC,IAAIE,EAAe,aAAc,CAChD,aAAc,KACpB,CAAK,EAEQ,QAAO,CACjB,CAIDN,EAAU,EACP,KAAKG,GAAU,CACdD,EAAWC,CAAM,CACvB,CAAK,EACA,MAAMI,GAAS,CACdT,EAAS,MAAM,CACb,MAAO,MACP,SAAU,WACV,QAAS,4EACjB,CAAO,CACP,CAAK,CACL,CAAC"}